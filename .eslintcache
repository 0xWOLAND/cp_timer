[{"/Users/bhargavannem/Desktop/dev/ReactProjects/cp-timer/src/index.js":"1","/Users/bhargavannem/Desktop/dev/ReactProjects/cp-timer/src/App.js":"2","/Users/bhargavannem/Desktop/dev/ReactProjects/cp-timer/src/reportWebVitals.js":"3","/Users/bhargavannem/Desktop/dev/ReactProjects/cp-timer/src/components/main_view.js":"4","/Users/bhargavannem/Desktop/dev/ReactProjects/cp-timer/src/components/result.js":"5"},{"size":500,"mtime":1608094144171,"results":"6","hashOfConfig":"7"},{"size":315,"mtime":1608094144046,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1608094144245,"results":"9","hashOfConfig":"7"},{"size":4338,"mtime":1608094144048,"results":"10","hashOfConfig":"7"},{"size":1890,"mtime":1608094144170,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6tloww",{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"17"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"17"},"/Users/bhargavannem/Desktop/dev/ReactProjects/cp-timer/src/index.js",[],"/Users/bhargavannem/Desktop/dev/ReactProjects/cp-timer/src/App.js",["26"],"import logo from './logo.svg';\nimport './App.css';\nimport MainView from './components/main_view.js'\nimport Result from \"./components/result\"\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div id=\"background\">\n        <Result />\n        <MainView />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n",["27","28"],"/Users/bhargavannem/Desktop/dev/ReactProjects/cp-timer/src/reportWebVitals.js",[],"/Users/bhargavannem/Desktop/dev/ReactProjects/cp-timer/src/components/main_view.js",["29"],"import React, { Component } from \"react\";\nimport \"./main_view.css\";\nimport ReactDOM from 'react-dom';\n\nclass MainView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { time: 0.0, completed: 0, times: [], canStart: false };\n    this.next = this.next.bind(this);\n    this.reset = this.reset.bind(this);\n    this.clear = this.clear.bind(this);\n    this.pause = this.pause.bind(this);\n    this.tick = this.tick.bind(this);\n    this.start = this.start.bind(this);\n  }\n \n\n  start() {\n    this.timerID = setInterval(() => this.tick(), 100);\n    this.setState({ canStart: false });\n\n    // this.tick();\n  }\n\n  handleKeyPress(e) {\n    console.log(\"hi\");\n  }\n  componentDidMount() {\n    this.start();\n  }\n\n  componentWillUnmount() {\n    this.pause();\n  }\n\n  pause() {\n    clearInterval(this.timerID);\n    this.setState({ canStart: true });\n  }\n  tick() {\n    this.setState({\n      time: this.state.time + 0.1,\n    });\n  }\n\n  clear() {\n    this.setState({\n      time: 0,\n    });\n  }\n  next() {\n    var ele = document.getElementsByClassName(\"circle\");\n    var res = document.getElementsByClassName(\"Result\");\n    if (this.state.completed === 5) {\n      \n      this.reset();\n    } else {\n      ele[this.state.completed].className += \" completed\";\n      res[this.state.completed].innerHTML = (this.state.time / 60).toFixed(1);\n      this.setState({ completed: this.state.completed + 1 });\n      this.state.times.push(this.state.time);\n      this.clear();\n    }\n  }\n\n  reset() {\n    this.pause();\n    this.setState({ completed: 0 });\n    var ele = document.getElementsByClassName(\"circle\");\n    var res = document.getElementsByClassName(\"Result\");\n    for (var i = 0; i < 5; i++) {\n      ele[i].className = \"circle\";\n      res[i].innerHTML = 0;\n    }\n    this.clear();\n    this.start();\n  }\n\n  render() {\n    return (\n      <div id=\"main_view_container\">\n        <h1 id=\"title\">CP Timer</h1>\n        <h2>\n          <inline id=\"time\">{this.state.time.toFixed(2)}</inline> seconds\n        </h2>\n        <div id=\"circle_container\">\n          <div className=\"circle\" id=\"c1\"></div>\n\n          <div className=\"circle\" id=\"c2\"></div>\n\n          <div className=\"circle\" id=\"c3\"></div>\n\n          <div className=\"circle\" id=\"c4\"></div>\n\n          <div className=\"circle\" id=\"c5\"></div>\n        </div>\n\n        <div id=\"button_container\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            height=\"50\"\n            viewBox=\"0 0 24 24\"\n            width=\"50\"\n            onClick={this.reset}\n          >\n            <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n            <path d=\"M12.5 8c-2.65 0-5.05.99-6.9 2.6L2 7v9h9l-3.62-3.62c1.39-1.16 3.16-1.88 5.12-1.88 3.54 0 6.55 2.31 7.6 5.5l2.37-.78C21.08 11.03 17.15 8 12.5 8z\" />\n          </svg>\n          {/* pause */}\n          <svg\n            onClick={this.pause}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            height=\"50\"\n            viewBox=\"0 0 24 24\"\n            width=\"50\"\n          >\n            <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n            <path d=\"M6 19h4V5H6v14zm8-14v14h4V5h-4z\" />\n          </svg>\n\n          {/* play  */}\n          {this.state.canStart ? (\n            <div>\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                height=\"50\"\n                viewBox=\"0 0 24 24\"\n                width=\"50\"\n                onClick={this.start}\n              >\n                <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n                <path d=\"M8 5v14l11-7z\" />\n              </svg>{\" \"}\n            </div>\n          ) : (\n            <div>\n              {\" \"}\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                height=\"50\"\n                viewBox=\"0 0 24 24\"\n                width=\"50\"\n              >\n                <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n                <path d=\"M8 5v14l11-7z\" fill=\"#d3d3d3\" />\n              </svg>\n            </div>\n          )}\n          {/* next */}\n          <svg\n            onClick={this.next}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            height=\"50\"\n            viewBox=\"0 0 24 24\"\n            width=\"50\"\n          >\n            <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n            <path d=\"M6 18l8.5-6L6 6v12zM16 6v12h2V6h-2z\" />\n          </svg>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MainView;\n","/Users/bhargavannem/Desktop/dev/ReactProjects/cp-timer/src/components/result.js",["30"],"import React, { Component } from \"react\";\nimport \"./result.css\";\nexport default class Result extends Component {\n  constructor(props) {\n    super(props);\n    this.copy = this.copy.bind(this);\n  }\n  copy() {\n    let ans = \"\";\n    let arr = document.getElementsByClassName(\"Result\");\n    for (let i = 0; i < 5; i++) {\n      ans += arr[i].innerHTML + \" \";\n    }\n    navigator.clipboard.writeText(ans);\n  }\n  render() {\n    return (\n      <div id=\"result_container\">\n        <div id=\"result\">\n          <h1 className=\"Result\" id=\"r1\">\n            0\n          </h1>\n          <h1 className=\"Result\" id=\"r2\">\n            0\n          </h1>\n          <h1 className=\"Result\" id=\"r3\">\n            0\n          </h1>\n          <h1 className=\"Result\" id=\"r4\">\n            0\n          </h1>\n          <h1 className=\"Result\" id=\"r5\">\n            0\n          </h1>\n        </div>\n        <div id=\"copy_button_container\" >\n          <div>\n            <div id=\"intro-content\" class=\"center-content\">\n              <div class=\"center-content-inner\">\n                <div class=\"content-section content-section-margin\">\n                  <div class=\"content-section-grid clearfix\">\n                    <a onClick={this.copy}class=\"button nav-link\">\n                      <div class=\"bottom\"></div>\n\n                      <div class=\"top\">\n                        <div class=\"label\">Copy Text!</div>\n\n                        <div class=\"button-border button-border-left\"></div>\n                        <div class=\"button-border button-border-top\"></div>\n                        <div class=\"button-border button-border-right\"></div>\n                        <div class=\"button-border button-border-bottom\"></div>\n                      </div>\n                    </a>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n",{"ruleId":"31","severity":1,"message":"32","line":1,"column":8,"nodeType":"33","messageId":"34","endLine":1,"endColumn":12},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"31","severity":1,"message":"39","line":3,"column":8,"nodeType":"33","messageId":"34","endLine":3,"endColumn":16},{"ruleId":"40","severity":1,"message":"41","line":42,"column":21,"nodeType":"42","endLine":42,"endColumn":67},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-native-reassign",["43"],"no-negated-in-lhs",["44"],"'ReactDOM' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]